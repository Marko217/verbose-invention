@model List<AgreementManagement.Web.Models.AgreementViewModel>
@{
    ViewData["Title"] = "Product";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />

@*<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.js"></script>*@
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>*@
<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>

@*<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>*@

<div class="container">
    <div class="row" style="margin-bottom:15px;">
        <div class="col-4">
            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="background-color:lightgreen">
                <div class="toast-body">
                    <strong>You have successfully logged in!</strong>
                </div>
            </div>
        </div>
        <div class="offset-4 col-4" style="text-align:right">
            <button type="button" class="btn btn-success" data-toggle="modal" onclick="showModal()">New Agreement</button>
        </div>
    </div>
    <table class="table table-hover" id="agreementTable">
        <thead>
            <tr>
                <th>#</th>
                <th>Username</th>
                <th>Product Group Code</th>
                <th>Group Description</th>
                <th>Product Number</th>
                <th>Product Description</th>
                <th>Effective Date</th>
                <th>Expiration Date</th>
                <th>Product Price</th>
                <th>New Price</th>  
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>



<div class="modal" tabindex="-1" id="agreementModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">New Agreement</h5>
                <button type="button" class="close" onclick="hideModal()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addAgreementForm">
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label for="group">Group </label>
                            <select name="productGroupId" id="productGroupId" asp-items="@ViewBag.ProductGroup" class="form-select" onchange="productData()"></select>
                            <label style="color:red" id="labelErrorGroup">Field are required!</label>
                        </div>
                        <div class="col-md-6">
                            <label for="product">Product </label>
                            <select name="productId" id="productId" asp-items="@ViewBag.Product" class="form-select"></select>
                            @*<input type="text" name="productId" id="productId"/>*@
                            <label style="color:red" id="labelErrorProduct">Field are required!</label>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label for="effectiveDate">Effective Date </label>
                            <input type="date" name="effectiveDate" class="form-control" id="effectiveDate" data-inputmask="'alias': 'date'">
                            <label style="color:red" id="labelErrorEffectiveDate">Field are required!</label>

                        </div>
                        <div class="col-md-6">
                            <label for="expirationDate">Expiration Date </label>
                            <input type="date" name="expirationDate" class="form-control" id="expirationDate" data-inputmask="'alias': 'date'">
                            <label style="color:red" id="labelErrorExpirationDate">Field are required!</label>

                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-6">
                            <label for="newPrice">New Price </label>
                            <input type="number" name="newPrice" class="form-control" id="newPrice" placeholder="0.00" data-inputmask="'alias': 'currency'">
                            <label style="color:red" id="labelErrorNewPrice">Field are required!</label>

                        </div>
                        <div class="col-md-2 offset-2 form-check" style="text-align:center">
                            <label class="form-check-label" for="active">Active</label>
                            <input type="checkbox" id="active" name="active">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="postAgreementValidation()" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" onclick="hideModal()">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(function () {
        $('.toast').toast('show');
        setTimeout(hideToast, 3000);
        var tabela = $('#agreementTable').DataTable({})

        //inicijalizacijaTabele('agreementTable');
        var tabela = $('#agreementTable').DataTable({
            "destroy": true,
            "processing": true,
            "serverSide": true,
            "ajax": {
                "url": "/Agreement/AgreementData",
                "type": "GET",
                "dataType": "json",
                "context": this,
                "async": false
            },
            "columns": [
                { "data": "id" },
                { "data": "user.userName" },
                { "data": "productGroupId" },
                { "data": "productGroup.groupDescription" },
                { "data": "product.productNumber" },
                { "data": "product.productDescription" },
                { "data": "effectiveDate" },
                { "data": "expirationDate" },
                { "data": "productPrice" },
                { "data": "newPrice" },
                { "data": "id" },
            ],
            "columnDefs": [
                {
                    "render": function (data, type, row, meta) {
                        console.log(data);
                        return tabela.page.info().start + meta.row + 1;
                    },
                    "className": "algRight", "searchable": false, "orderable": false, "targets": 0
                },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 1 },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 2 },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 3 },
                { "className": "algRight", "searchable": false, "orderable": false, "targets": 4 },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 5 },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 6 },
                { "className": "algLeft", "searchable": false, "orderable": false, "targets": 7 },
                {
                    "render": function (data, type, row, meta) {
                        return numeral(data).format('0,0.00');
                    },
                    "className": "algLeft", "searchable": false, "orderable": false, "targets": 8
                },
                {
                    "render": function (data, type, row, meta) {
                        return numeral(data).format('0,0.00');
                    },
                    "className": "algLeft", "searchable": false, "orderable": false, "targets": 9
                },
                {
                    "render": function (data, type, row, meta) {
                        return "<a href='#' class='btn btn-primary' onclick='editAgreement(this)''>" + Edit + "</a>" + " " + "<a href='#' class='btn btn-danger' onclick='deleteAgreement(this)'>" + Delete + "</a>";

                        //    return "<a href='#' class='btn btn-danger' onclick=editAgreement('" + row.productGroupId + "," + row.productId + "," + row.effectirningveDate + "," + row.expirationDate + "," + row.newPrice + "'); >Edit</a>" + " " + " <a href='#' class='btn btn-danger' onclick = deleteAgreement('" + data + "'); > Delete</a >";
                    },
                    "className": "algLeft", "searchable": false, "orderable": false, "targets": 10
                }
            ],
            "ordering": true,
            "paging": true,
            "scrollX": true,
            "pageLength": 20
        });
    });

    function showModal() {
        $('#agreementModal').modal('show');
        document.getElementById("labelErrorProduct").style.display = "none";
        document.getElementById("labelErrorGroup").style.display = "none";
        document.getElementById("labelErrorEffectiveDate").style.display = "none";
        document.getElementById("labelErrorExpirationDate").style.display = "none";
        document.getElementById("labelErrorNewPrice").style.display = "none";
    }

    function hideModal() {
        $('#agreementModal').modal('hide');
    }

    function hideToast() {
        $('.toast').toast('hide');
    }

    function productData() {

        var groupProductId = document.getElementById('productGroupId').value;
       
        $.ajax({
            type: "GET",
            url: '/Agreement/ProductSelect',
            data: {
                id: groupProductId
            },
            dataType: "json",
            context: this,
            async: false,
            success: function (response) {
                console.log(response);
                $('#productId').find('option').remove().end()
                $.each(response, function (i, item) {
                    console.log(item);
                    $('#productId').append($('<option>', {
                        value: item.id,
                        text: item.productDescription
                    }));
                });
            },
            error: function (err) {
                console.log(err);
            }
        });
    }
    function postAgreement() {
        $.ajax({
            type: 'POST',
            url: '/Agreement/AddAgreement',
            data: $("#addAgreementForm").serialize(),
            dataType: 'html',
            contentType: 'application/x-www-form-urlencoded; charset-UTF-8'
        })
            .done(function (response) {
                if (response == "1") {
                    console.log("Uspesan upis");
                    //inicijalizacijaTabele();
                    document.getElementById('productGroupId').value = "";
                    document.getElementById('productId').value = "";
                    document.getElementById('effectiveDate').value = "";
                    document.getElementById('expirationDate').value = "";
                    document.getElementById('newPrice').value = "";
                    document.getElementById('active').value = "";
                    hideModal();
                }
                else {
                    console.log("Greska pri upisu");
                }
            })
            .fail(function (response) {
                console.log("greska " + response);
            })
    }


    function postAgreementValidation() {
        
        var group = document.getElementById('productGroupId').value;
        var product = document.getElementById('productId').value;
        var effectiveDate = document.getElementById('effectiveDate').value;
        var expirationDate = document.getElementById('expirationDate').value;
        var newPrice = document.getElementById('newPrice').value;

        if (group != "" && product != "" && effectiveDate != "" && expirationDate != "" && newPrice != "") {
            document.getElementById("newPrice").style.borderColor = "";
            document.getElementById("labelErrorNewPrice").style.display = "none";

            postAgreement();
        }
        else {
            if (group != "") {
                document.getElementById("productGroupId").style.borderColor = "";
                document.getElementById("labelErrorGroup").style.display = "none";
                if (product != "") {
                    document.getElementById("productId").style.borderColor = "";
                    document.getElementById("labelErrorProduct").style.display = "none";
                    if (effectiveDate != "") {
                        document.getElementById("effectiveDate").style.borderColor = "";
                        document.getElementById("labelErrorEffectiveDate").style.display = "none";
                        if (expirationDate != "") {
                            document.getElementById("expirationDate").style.borderColor = "";
                            document.getElementById("labelErrorExpirationDate").style.display = "none";
                            if (newPrice != "") {
                                document.getElementById("newPrice").style.borderColor = "";
                                document.getElementById("labelErrorNewPrice").style.display = "none";
                            }
                            else {
                                document.getElementById("newPrice").style.borderColor = "red";
                                document.getElementById("labelErrorNewPrice").style.display = "block";
                            }
                        } else {
                            document.getElementById("expirationDate").style.borderColor = "red";
                            document.getElementById("labelErrorExpirationDate").style.display = "block";
                        }
                    } else {
                        document.getElementById("effectiveDate").style.borderColor = "red";
                        document.getElementById("labelErrorEffectiveDate").style.display = "block";
                    }
                } else {
                    document.getElementById("productId").style.borderColor = "red";
                    document.getElementById("labelErrorProduct").style.display = "block";
                }
            } else {
                document.getElementById("productGroupId").style.borderColor = "red";
                document.getElementById("labelErrorGroup").style.display = "block";
            }
        }







        


        
    }
    
    function deleteAgreement(elem) {
        var currentRow = $(elem).closest("tr");
        var data = $('#agreementTable').DataTable().row(currentRow).data();
        var id = data['id'];

        $.ajax({
            type: "GET",
            url: '/Agreement/DeleteAgrement',
            data: {
                id: id
            },
            dataType: "json",
            context: this,
            async: false,
            success: function (response) {
                console.log(response);
                if (response == "1") {
                    noty({ text: 'Uspesno obrisano!', type: 'success', layout: 'centerBig' }).show();
                }
                else {
                    noty({ text: 'Neuspesno obrisan!', type: 'error', layout: 'centerBig' }).show();
                }
            }
        });
    }

    function editAgreement(elem) {

        var currentRow = $(elem).closest("tr");
        var data = $('#agreementTable').DataTable().row(currentRow).data();

        var group = data['productGroup'];
        var product = data['product'];
        var effectiveDate = data['effectiveDate'];
        var expirationDate = data['expirationDate'];
        var newPrice = data['newPrice'];

        document.getElementById('group').value = group;
        document.getElementById('product').value = product;
        document.getElementById('effectiveDate').value = effectiveDate;
        document.getElementById('expirationDate').value = expirationDate;
        document.getElementById('newPrice').value = newPrice;
        showModal();
    }
</script>