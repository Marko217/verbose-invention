#pragma checksum "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\Agreement\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "020abf81166e6873ed724536aeade2a8e7870379"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Agreement_Index), @"mvc.1.0.view", @"/Views/Agreement/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\_ViewImports.cshtml"
using AgreementManagement.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\_ViewImports.cshtml"
using AgreementManagement.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"020abf81166e6873ed724536aeade2a8e7870379", @"/Views/Agreement/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75fd30aaa94539342e79c251530e57629f190eb3", @"/Views/_ViewImports.cshtml")]
    public class Views_Agreement_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<AgreementManagement.Web.Models.AgreementViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "productGroupId", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("productGroupId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-select"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("productData()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "productId", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("productId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("addAgreementForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\Agreement\Index.cshtml"
  
    ViewData["Title"] = "Product";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css\" />\r\n\r\n");
            WriteLiteral(@"<script src=""https://code.jquery.com/jquery-3.6.0.min.js"" integrity=""sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="" crossorigin=""anonymous""></script>
<script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"" crossorigin=""anonymous""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js""></script>

");
            WriteLiteral(@"
<div class=""container"">
    <div class=""row"" style=""margin-bottom:15px;"">
        <div class=""col-4"">
            <div class=""toast"" id=""toastLogin"" role=""alert"" aria-live=""assertive"" aria-atomic=""true"" style=""background-color:lightgreen"">
                <div class=""toast-body"">
                    <strong>You have successfully logged in!</strong>
                </div>
            </div>
        </div>
        <div class=""offset-4 col-4"" style=""text-align:right"">
            <button type=""button"" class=""btn btn-success"" data-toggle=""modal"" onclick=""showModal()"">New Agreement</button>
        </div>
    </div>
    <table class=""table table-hover"" id=""agreementTable"">
        <thead>
            <tr>
                <th style=""text-align:center"">#</th>
                <th style=""text-align:center"">Username</th>
                <th style=""text-align:center"">Product Group Code</th>
                <th style=""text-align:center"">Group Description</th>
                <th style=""text-align:ce");
            WriteLiteral(@"nter"">Product Number</th>
                <th style=""text-align:center"">Product Description</th>
                <th style=""text-align:center"">Effective Date</th>
                <th style=""text-align:center"">Expiration Date</th>
                <th style=""text-align:center"">Product Price</th>
                <th style=""text-align:center"">New Price</th>
                <th width=""12%"" style=""text-align:center"">Action</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>



<div class=""modal"" tabindex=""-1"" id=""agreementModal"" role=""dialog"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">New Agreement</h5>
                <button type=""button"" class=""close"" onclick=""hideModal()"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body");
            WriteLiteral("\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "020abf81166e6873ed724536aeade2a8e78703799144", async() => {
                WriteLiteral(@"
                    <input type=""hidden"" id=""id"" name=""id"" />

                    <div class=""row form-group"">
                        <div class=""col-md-6"">
                            <label for=""group"">Group </label>
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "020abf81166e6873ed724536aeade2a8e78703799667", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
#nullable restore
#line 70 "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\Agreement\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.ProductGroup;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <label style=""color:red"" id=""labelErrorGroup"">Field are required!</label>
                        </div>
                        <div class=""col-md-6"">
                            <label for=""product"">Product </label>
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "020abf81166e6873ed724536aeade2a8e787037911899", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
#nullable restore
#line 75 "C:\Users\Goran\Desktop\Agreement management\AgreementManagement\AgreementManagement.Web\Views\Agreement\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.Product;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
                WriteLiteral(@"                            <label style=""color:red"" id=""labelErrorProduct"">Field are required!</label>
                        </div>
                    </div>
                    <div class=""row form-group"">
                        <div class=""col-md-6"">
                            <label for=""effectiveDate"">Effective Date </label>
                            <input type=""date"" name=""effectiveDate"" class=""form-control"" id=""effectiveDate"">
                            <label style=""color:red"" id=""labelErrorEffectiveDate"">Field are required!</label>

                        </div>
                        <div class=""col-md-6"">
                            <label for=""expirationDate"">Expiration Date </label>
                            <input type=""date"" name=""expirationDate"" class=""form-control"" id=""expirationDate"">
                            <label style=""color:red"" id=""labelErrorExpirationDate"">Field are required!</label>

                        </div>
                    </div>
          ");
                WriteLiteral(@"          <div class=""row form-group"">
                        <div class=""col-md-6"">
                            <label for=""newPrice"">New Price </label>
                            <input type=""number"" name=""newPrice"" class=""form-control"" id=""newPrice"" placeholder=""0.00"" data-inputmask=""'alias': 'currency'"">
                            <label style=""color:red"" id=""labelErrorNewPrice"">Field are required!</label>

                        </div>
                        <div class=""col-md-2 offset-2 form-check"" style=""text-align:center"">
                            <label  for=""active"">Active</label>
                            <input  type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 5806, "\"", 5814, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"active\" name=\"active\">\r\n                        </div>\r\n                    </div>\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" onclick=""postAgreementValidation()"" class=""btn btn-primary"">Save</button>
                <button type=""button"" class=""btn btn-secondary"" onclick=""hideModal()"">Close</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""deleteModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
");
            WriteLiteral(@"            <div class=""modal-body"">
                <input type=""hidden"" id=""idAgreement""/>
                <h4>Are you sure you want to delete ? </h4>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" onclick=""hideDeleteModal('deleteModal')"">No</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""deleteAgreement()"">Yes</button>
            </div>
        </div>
    </div>
</div>

<div class=""toast"" id=""toastSuccesfulAdd"" role=""alert"" aria-live=""assertive"" aria-atomic=""true"" style=""background-color:lightgreen"">
    <div class=""toast-body"">
        <strong>Successful addition of agreement!</strong>
    </div>
</div>
<div class=""toast"" id=""toastErrorAdd"" role=""alert"" aria-live=""assertive"" aria-atomic=""true"" style=""background-color:orangered"">
    <div class=""toast-body"">
        <strong>
            Error adding agreement!
        </strong>
    </div>
</div>

<script>
    $(function () {
 ");
            WriteLiteral(@"       showToast(""toastLogin"");
        hideToast(""toastSuccesfulAdd"");
        hideToast(""toastErrorAdd"");
        setTimeout(hideToast(""toastLogin""), 1000);
        initializationTable(""agreementTable"");
        document.getElementById('id').value = 0;
        productData();
        initializationTable(""tableId"");
    });

    //function initializationTable(tableId) {
    //    var table = $('#' + tableId).DataTable({
    //        ""destroy"": true,
    //        ""processing"": true,
    //        ""serverSide"": true,
    //        ""ajax"": {
    //            ""url"": ""/Agreement/AgreementData"",
    //            ""type"": ""POST"",
    //            ""dataType"": ""json"",
    //            ""context"": this,
    //            ""async"": false
    //        },
    //        ""columns"": [
    //            { ""data"": ""srn"" },
    //            { ""data"": ""user"" },
    //            { ""data"": ""groupCode"" },
    //            { ""data"": ""productGroupDescription"" },
    //            { ""data"": ""productNu");
            WriteLiteral(@"mber"" },
    //            { ""data"": ""productDescription"" },
    //            { ""data"": ""effectiveDate"" },
    //            { ""data"": ""expirationDate"" },
    //            { ""data"": ""productPrice"" },
    //            { ""data"": ""newPrice"" },
    //            { ""data"": ""id"" },
    //        ],
    //        ""columnDefs"": [
    //            {
    //                ""render"": function (data, type, row, meta) {
    //                    return data;
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets"": 0
    //            },
    //            { ""searchable"": false, ""orderable"": false, ""targets"": 1 },
    //            { ""searchable"": false, ""orderable"": false, ""targets"": 2 },
    //            { ""searchable"": false, ""orderable"": false, ""targets"": 3 },
    //            { ""searchable"": false, ""orderable"": false, ""targets"": 4 },
    //            { ""searchable"": false, ""orderable"": false, ""targets"": 5 },
    //            {
    //                """);
            WriteLiteral(@"render"": function (data, type, row, meta) {
    //                    if (data != null)
    //                        return moment(data).format('MM/DD/YYYY');
    //                    else
    //                        return data;
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets"": 6
    //            },
    //            {
    //                ""render"": function (data, type, row, meta) {
    //                    if (data != null)
    //                        return moment(data).format('MM/DD/YYYY');
    //                    else
    //                        return data;
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets"": 7
    //            },
    //            {
    //                ""render"": function (data, type, row, meta) {
    //                    return numeral(data).format('0,0.00');
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets");
            WriteLiteral(@""": 8
    //            },
    //            {
    //                ""render"": function (data, type, row, meta) {
    //                    return numeral(data).format('0,0.00');
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets"": 9
    //            },
    //            {
    //                ""render"": function (data, type, row, meta) {
    //                    return ""<a href='#' class='btn btn-primary' onclick='editAgreement(this)'> Edit </a>"" + "" "" + ""<a href='#' class='btn btn-danger' onclick='deleteModalAgreement(this)'> Delete </a>"";
    //                },
    //                ""searchable"": false, ""orderable"": false, ""targets"": 10
    //            }
    //        ],
    //        ""ordering"": true,
    //        ""paging"": true,
    //        ""pageLength"": 5
    //    });
    //}

    function showModal() {
        $('#agreementModal').modal('show');

        document.getElementById(""labelErrorProduct"").style.display = ""none"";
 ");
            WriteLiteral(@"       document.getElementById(""labelErrorGroup"").style.display = ""none"";
        document.getElementById(""labelErrorEffectiveDate"").style.display = ""none"";
        document.getElementById(""labelErrorExpirationDate"").style.display = ""none"";
        document.getElementById(""labelErrorNewPrice"").style.display = ""none"";

        document.getElementById(""productGroupId"").style.borderColor = """";
        document.getElementById(""productId"").style.borderColor = """";
        document.getElementById(""effectiveDate"").style.borderColor = """";
        document.getElementById(""expirationDate"").style.borderColor = """";
        document.getElementById(""newPrice"").style.borderColor = """";

    }

    function hideModal() {
        $('#agreementModal').modal('hide');
        document.getElementById('productGroupId').value = """";
        document.getElementById('productId').value = """";
        document.getElementById('effectiveDate').value = """";
        document.getElementById('expirationDate').value = """";
      ");
            WriteLiteral(@"  document.getElementById('newPrice').value = """";
        document.getElementById('active').value = """";
    }

    function deleteModalAgreement(elem)
    {
        var currentRow = $(elem).closest(""tr"");
        var data = $('#agreementTable').DataTable().row(currentRow).data();
        var id = data['id'];

        $('#deleteModal').modal('show');
        document.getElementById('idAgreement').value = id;
    }

    function showToast(toast) {
        $('#' + toast).toast('show');
    }

    function hideToast(toast) {
        $('#' + toast).toast('hide');
    }

    function productData() {

        var groupProductId = document.getElementById('productGroupId').value;
        
        $.ajax({
            type: ""GET"",
            url: '/Agreement/ProductSelect',
            data: {
                id: groupProductId
            },
            dataType: ""json"",
            context: this,
            async: false,
            success: function (response) {
                ");
            WriteLiteral(@"$('#productId').find('option').remove().end()
                $.each(response, function (i, item) {
                    $('#productId').append($('<option>', {
                        value: item.id,
                        text: item.productDescription
                    }));
                });
            },
            error: function (err) {
                console.log(err);
            }
        });
    }
    function postAgreement() {
        var active = false;
        if (document.getElementById('active').checked == true) {
            var active = true;
        }

        $.ajax({
            type: 'POST',
            url: '/Agreement/AddAgreement',
            data: $(""#addAgreementForm"").serialize(),
            dataType: 'html',
            contentType: 'application/x-www-form-urlencoded; charset-UTF-8'
        })
            .done(function (response) {
                hideModal();
                if (response == ""1"") {
                    initializationTable(""agreeme");
            WriteLiteral(@"ntTable"");
                    showToast(""toastSuccesfulAdd"");
                }
                else {
                    showToast(""toastErrorAdd"");
                }
            })
            .fail(function (response) {
                console.log(""greska "" + response);
                showToast(""toastSuccesfulAdd"");
            })
    }
    function postAgreementValidation() {

        var group = document.getElementById('productGroupId').value;
        var product = document.getElementById('productId').value;
        var effectiveDate = document.getElementById('effectiveDate').value;
        var expirationDate = document.getElementById('expirationDate').value;
        var newPrice = document.getElementById('newPrice').value;
        if (group != """" && product != """" && effectiveDate != """" && expirationDate != """" && newPrice != """") {
            document.getElementById(""newPrice"").style.borderColor = """";
            document.getElementById(""labelErrorNewPrice"").style.display = ""none""");
            WriteLiteral(@";
            postAgreement();
        }
        else {
            if (group != """") {
                document.getElementById(""productGroupId"").style.borderColor = """";
                document.getElementById(""labelErrorGroup"").style.display = ""none"";
                if (product != """") {
                    document.getElementById(""productId"").style.borderColor = """";
                    document.getElementById(""labelErrorProduct"").style.display = ""none"";
                    if (effectiveDate != """") {
                        document.getElementById(""effectiveDate"").style.borderColor = """";
                        document.getElementById(""labelErrorEffectiveDate"").style.display = ""none"";
                        if (expirationDate != """") {
                            document.getElementById(""expirationDate"").style.borderColor = """";
                            document.getElementById(""labelErrorExpirationDate"").style.display = ""none"";
                            if (newPrice != """") {
             ");
            WriteLiteral(@"                   document.getElementById(""newPrice"").style.borderColor = """";
                                document.getElementById(""labelErrorNewPrice"").style.display = ""none"";
                            }
                            else {
                                document.getElementById(""newPrice"").style.borderColor = ""red"";
                                document.getElementById(""labelErrorNewPrice"").style.display = ""block"";
                            }
                        } else {
                            document.getElementById(""expirationDate"").style.borderColor = ""red"";
                            document.getElementById(""labelErrorExpirationDate"").style.display = ""block"";
                        }
                    } else {
                        document.getElementById(""effectiveDate"").style.borderColor = ""red"";
                        document.getElementById(""labelErrorEffectiveDate"").style.display = ""block"";
                    }
                } else {
     ");
            WriteLiteral(@"               document.getElementById(""productId"").style.borderColor = ""red"";
                    document.getElementById(""labelErrorProduct"").style.display = ""block"";
                }
            } else {
                document.getElementById(""productGroupId"").style.borderColor = ""red"";
                document.getElementById(""labelErrorGroup"").style.display = ""block"";
            }
        }


    }

    function deleteAgreement() {
        var id = document.getElementById('idAgreement').value;
        $.ajax({
            type: ""GET"",
            url: '/Agreement/DeleteAgrement',
            data: {
                id: id
            },
            dataType: ""json"",
            context: this,
            async: false,
            success: function (response) {
                if (response == ""1"") {
                    hideDeleteModal(""deleteModal"");
                    initializationTable(""agreementTable"");
                }
            }
        });
    }
    function ed");
            WriteLiteral(@"itAgreement(elem) {
        var currentRow = $(elem).closest(""tr"");
        var data = $('#agreementTable').DataTable().row(currentRow).data();
        var group = data['productGroupId'];
        var idAgreement = data['id'];
        var effectiveDate = data['effectiveDate'];
        var expirationDate = data['expirationDate'];
        var newPrice = data['newPrice'];
        var active = data['active'];
        document.getElementById('productGroupId').value = group;
        document.getElementById('id').value = idAgreement;

        if (active == true) {
            document.getElementById('active').checked = true;
        }
        else {
            document.getElementById('active').checked = false;
        }
        productData();
        //console.log(newPrice.replace("","", "".""));
        document.getElementById('effectiveDate').value = moment(effectiveDate).format('YYYY-MM-DD');
        document.getElementById('expirationDate').value = moment(expirationDate).format('YYYY-MM-DD');
 ");
            WriteLiteral("       document.getElementById(\'newPrice\').value = numeral(newPrice).format(\'0,0.00\');;\r\n        showModal();\r\n    }\r\n    function hideDeleteModal(id) {\r\n        $(\'#\'+ id).modal(\'hide\');\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<AgreementManagement.Web.Models.AgreementViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
